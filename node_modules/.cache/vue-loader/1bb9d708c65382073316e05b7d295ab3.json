{"remainingRequest":"/home/administrator/Downloads/pl/pla/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/administrator/Downloads/pl/pla/src/components/chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/administrator/Downloads/pl/pla/src/components/chat.vue","mtime":1615223020272},{"path":"/home/administrator/Downloads/pl/pla/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/administrator/Downloads/pl/pla/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/administrator/Downloads/pl/pla/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/administrator/Downloads/pl/pla/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiYXBwIiwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLyogZXNsaW50LWRpc2FibGUgKi8KICAgICAgcGFydGljaXBhbnRzOiBbCiAgICAgICAgewogICAgICAgICAgaWQ6ICJ1c2VyMSIsCiAgICAgICAgICBuYW1lOiAiTWF0dGVvIiwKICAgICAgICAgIGltYWdlVXJsOiAiaHR0cHM6Ly9hdmF0YXJzMy5naXRodWJ1c2VyY29udGVudC5jb20vdS8xOTE1OTg5P3M9MjMwJnY9NCIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIGlkOiAidXNlcjIiLAogICAgICAgICAgbmFtZTogIlN1cHBvcnQiLAogICAgICAgICAgaW1hZ2VVcmw6ICJodHRwczovL2F2YXRhcnMzLmdpdGh1YnVzZXJjb250ZW50LmNvbS91LzM3MDE4ODMyP3M9MjAwJnY9NCIKICAgICAgICB9CiAgICAgIF0sIC8vIHRoZSBsaXN0IG9mIGFsbCB0aGUgcGFydGljaXBhbnQgb2YgdGhlIGNvbnZlcnNhdGlvbi4gYG5hbWVgIGlzIHRoZSB1c2VyIG5hbWUsIGBpZGAgaXMgdXNlZCB0byBlc3RhYmxpc2ggdGhlIGF1dGhvciBvZiBhIG1lc3NhZ2UsIGBpbWFnZVVybGAgaXMgc3VwcG9zZWQgdG8gYmUgdGhlIHVzZXIgYXZhdGFyLgogICAgICB0aXRsZUltYWdlVXJsOiAiaHR0cHM6Ly9hLnNsYWNrLWVkZ2UuY29tLzY2ZjkvaW1nL2F2YXRhcnMtdGVhbXMvYXZhXzAwMDEtMzQucG5nIiwKICAgICAgbWVzc2FnZUxpc3Q6IFsKICAgICAgICAgIHsgdHlwZTogInRleHQiLCBhdXRob3I6IGBtZWAsIGRhdGE6IHsgdGV4dDogYFNheSB5ZXMhYCB9IH0sCiAgICAgICAgICB7IHR5cGU6ICJ0ZXh0IiwgYXV0aG9yOiBgdXNlcjFgLCBkYXRhOiB7IHRleHQ6IGBOby5gIH0gfQogICAgICBdLCAvLyB0aGUgbGlzdCBvZiB0aGUgbWVzc2FnZXMgdG8gc2hvdywgY2FuIGJlIHBhZ2luYXRlZCBhbmQgYWRqdXN0ZWQgZHluYW1pY2FsbHkKICAgICAgbmV3TWVzc2FnZXNDb3VudDogMCwKICAgICAgaXNDaGF0T3BlbjogZmFsc2UsIC8vIHRvIGRldGVybWluZSB3aGV0aGVyIHRoZSBjaGF0IHdpbmRvdyBzaG91bGQgYmUgb3BlbiBvciBjbG9zZWQKICAgICAgc2hvd1R5cGluZ0luZGljYXRvcjogIiIsIC8vIHdoZW4gc2V0IHRvIGEgdmFsdWUgbWF0Y2hpbmcgdGhlIHBhcnRpY2lwYW50LmlkIGl0IHNob3dzIHRoZSB0eXBpbmcgaW5kaWNhdG9yIGZvciB0aGUgc3BlY2lmaWMgdXNlcgogICAgICBjb2xvcnM6IHsKICAgICAgICBoZWFkZXI6IHsKICAgICAgICAgIGJnOiAiIzRlOGNmZiIsCiAgICAgICAgICB0ZXh0OiAiI2ZmZmZmZiIKICAgICAgICB9LAogICAgICAgIGxhdW5jaGVyOiB7CiAgICAgICAgICBiZzogIiM0ZThjZmYiCiAgICAgICAgfSwKICAgICAgICBtZXNzYWdlTGlzdDogewogICAgICAgICAgYmc6ICIjZmZmZmZmIgogICAgICAgIH0sCiAgICAgICAgc2VudE1lc3NhZ2U6IHsKICAgICAgICAgIGJnOiAiIzRlOGNmZiIsCiAgICAgICAgICB0ZXh0OiAiI2ZmZmZmZiIKICAgICAgICB9LAogICAgICAgIHJlY2VpdmVkTWVzc2FnZTogewogICAgICAgICAgYmc6ICIjZWFlYWVhIiwKICAgICAgICAgIHRleHQ6ICIjMjIyMjIyIgogICAgICAgIH0sCiAgICAgICAgdXNlcklucHV0OiB7CiAgICAgICAgICBiZzogIiNmNGY3ZjkiLAogICAgICAgICAgdGV4dDogIiM1NjU4NjciCiAgICAgICAgfQogICAgICB9LCAvLyBzcGVjaWZpZXMgdGhlIGNvbG9yIHNjaGVtZSBmb3IgdGhlIGNvbXBvbmVudAogICAgICBhbHdheXNTY3JvbGxUb0JvdHRvbTogZmFsc2UsIC8vIHdoZW4gc2V0IHRvIHRydWUgYWx3YXlzIHNjcm9sbHMgdGhlIGNoYXQgdG8gdGhlIGJvdHRvbSB3aGVuIG5ldyBldmVudHMgYXJlIGluIChuZXcgbWVzc2FnZSwgdXNlciBzdGFydHMgdHlwaW5nLi4uKQogICAgICBtZXNzYWdlU3R5bGluZzogdHJ1ZSAvLyBlbmFibGVzICpib2xkKiAvZW1waC8gX3VuZGVybGluZV8gYW5kIHN1Y2ggKG1vcmUgaW5mbyBhdCBnaXRodWIuY29tL21hdHRlenphL21zZ2Rvd24pCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZW5kTWVzc2FnZSAodGV4dCkgewogICAgICBpZiAodGV4dC5sZW5ndGggPiAwKSB7CiAgICAgICAgdGhpcy5uZXdNZXNzYWdlc0NvdW50ID0gdGhpcy5pc0NoYXRPcGVuID8gdGhpcy5uZXdNZXNzYWdlc0NvdW50IDogdGhpcy5uZXdNZXNzYWdlc0NvdW50ICsgMQogICAgICAgIHRoaXMub25NZXNzYWdlV2FzU2VudCh7IGF1dGhvcjogInN1cHBvcnQiLCB0eXBlOiAidGV4dCIsIGRhdGE6IHsgdGV4dCB9IH0pCiAgICAgIH0KICAgIH0sCiAgICBvbk1lc3NhZ2VXYXNTZW50IChtZXNzYWdlKSB7CiAgICAgIC8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIHNlbmRzIGEgbWVzc2FnZQogICAgICB0aGlzLm1lc3NhZ2VMaXN0ID0gWyAuLi50aGlzLm1lc3NhZ2VMaXN0LCBtZXNzYWdlIF0KICAgIH0sCiAgICBvcGVuQ2hhdCAoKSB7CiAgICAgIC8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyBvbiB0aGUgZmFiIGJ1dHRvbiB0byBvcGVuIHRoZSBjaGF0CiAgICAgIHRoaXMuaXNDaGF0T3BlbiA9IHRydWUKICAgICAgdGhpcy5uZXdNZXNzYWdlc0NvdW50ID0gMAogICAgfSwKICAgIGNsb3NlQ2hhdCAoKSB7CiAgICAgIC8vIGNhbGxlZCB3aGVuIHRoZSB1c2VyIGNsaWNrcyBvbiB0aGUgYm90dG9uIHRvIGNsb3NlIHRoZSBjaGF0CiAgICAgIHRoaXMuaXNDaGF0T3BlbiA9IGZhbHNlCiAgICB9LAogICAgaGFuZGxlU2Nyb2xsVG9Ub3AgKCkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBzY3JvbGxzIG1lc3NhZ2UgbGlzdCB0byB0b3AKICAgICAgLy8gbGV2ZXJhZ2UgcGFnaW5hdGlvbiBmb3IgbG9hZGluZyBhbm90aGVyIHBhZ2Ugb2YgbWVzc2FnZXMKICAgIH0sCiAgICBoYW5kbGVPblR5cGUgKCkgewogICAgICBjb25zb2xlLmxvZygiRW1pdCB0eXBpbmcgZXZlbnQiKQogICAgfSwKICAgIGVkaXRNZXNzYWdlKG1lc3NhZ2UpewogICAgICBjb25zdCBtID0gdGhpcy5tZXNzYWdlTGlzdC5maW5kKG09Pm0uaWQgPT09IG1lc3NhZ2UuaWQpOwogICAgICBtLmlzRWRpdGVkID0gdHJ1ZTsKICAgICAgbS5kYXRhLnRleHQgPSBtZXNzYWdlLmRhdGEudGV4dDsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["chat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"chat.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <beautiful-chat\n      :participants=\"participants\"\n      :titleImageUrl=\"titleImageUrl\"\n      :onMessageWasSent=\"onMessageWasSent\"\n      :messageList=\"messageList\"\n      :newMessagesCount=\"newMessagesCount\"\n      :isOpen=\"isChatOpen\"\n      :close=\"closeChat\"\n      :open=\"openChat\"\n      :showEmoji=\"true\"\n      :showFile=\"true\"\n      :showEdition=\"true\"\n      :showDeletion=\"true\"\n      :showTypingIndicator=\"showTypingIndicator\"\n      :showLauncher=\"true\"\n      :showCloseButton=\"true\"\n      :colors=\"colors\"\n      :alwaysScrollToBottom=\"alwaysScrollToBottom\"\n      :disableUserListToggle=\"false\"\n      :messageStyling=\"messageStyling\"\n      @onType=\"handleOnType\"\n      @edit=\"editMessage\"\n    />\n  </div>\n</template>\n<script>\nexport default {\n  name: \"app\",\n  data() {\n    return {\n      /* eslint-disable */\n      participants: [\n        {\n          id: \"user1\",\n          name: \"Matteo\",\n          imageUrl: \"https://avatars3.githubusercontent.com/u/1915989?s=230&v=4\"\n        },\n        {\n          id: \"user2\",\n          name: \"Support\",\n          imageUrl: \"https://avatars3.githubusercontent.com/u/37018832?s=200&v=4\"\n        }\n      ], // the list of all the participant of the conversation. `name` is the user name, `id` is used to establish the author of a message, `imageUrl` is supposed to be the user avatar.\n      titleImageUrl: \"https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png\",\n      messageList: [\n          { type: \"text\", author: `me`, data: { text: `Say yes!` } },\n          { type: \"text\", author: `user1`, data: { text: `No.` } }\n      ], // the list of the messages to show, can be paginated and adjusted dynamically\n      newMessagesCount: 0,\n      isChatOpen: false, // to determine whether the chat window should be open or closed\n      showTypingIndicator: \"\", // when set to a value matching the participant.id it shows the typing indicator for the specific user\n      colors: {\n        header: {\n          bg: \"#4e8cff\",\n          text: \"#ffffff\"\n        },\n        launcher: {\n          bg: \"#4e8cff\"\n        },\n        messageList: {\n          bg: \"#ffffff\"\n        },\n        sentMessage: {\n          bg: \"#4e8cff\",\n          text: \"#ffffff\"\n        },\n        receivedMessage: {\n          bg: \"#eaeaea\",\n          text: \"#222222\"\n        },\n        userInput: {\n          bg: \"#f4f7f9\",\n          text: \"#565867\"\n        }\n      }, // specifies the color scheme for the component\n      alwaysScrollToBottom: false, // when set to true always scrolls the chat to the bottom when new events are in (new message, user starts typing...)\n      messageStyling: true // enables *bold* /emph/ _underline_ and such (more info at github.com/mattezza/msgdown)\n    }\n  },\n  methods: {\n    sendMessage (text) {\n      if (text.length > 0) {\n        this.newMessagesCount = this.isChatOpen ? this.newMessagesCount : this.newMessagesCount + 1\n        this.onMessageWasSent({ author: \"support\", type: \"text\", data: { text } })\n      }\n    },\n    onMessageWasSent (message) {\n      // called when the user sends a message\n      this.messageList = [ ...this.messageList, message ]\n    },\n    openChat () {\n      // called when the user clicks on the fab button to open the chat\n      this.isChatOpen = true\n      this.newMessagesCount = 0\n    },\n    closeChat () {\n      // called when the user clicks on the botton to close the chat\n      this.isChatOpen = false\n    },\n    handleScrollToTop () {\n      // called when the user scrolls message list to top\n      // leverage pagination for loading another page of messages\n    },\n    handleOnType () {\n      console.log(\"Emit typing event\")\n    },\n    editMessage(message){\n      const m = this.messageList.find(m=>m.id === message.id);\n      m.isEdited = true;\n      m.data.text = message.data.text;\n    }\n  }\n}\n</script>"]}]}