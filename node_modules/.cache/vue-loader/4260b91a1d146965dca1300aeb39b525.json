{"remainingRequest":"/home/administrator/Downloads/pl/pla/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/administrator/Downloads/pl/pla/src/components/rightPannel.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/administrator/Downloads/pl/pla/src/components/rightPannel.vue","mtime":1614867479584},{"path":"/home/administrator/Downloads/pl/pla/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/administrator/Downloads/pl/pla/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/administrator/Downloads/pl/pla/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/administrator/Downloads/pl/pla/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdG9Eb1dvcms6ICIiCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgYWRkVGFzayhldmVudCkgewogICAgICBpZiAoZXZlbnQua2V5Q29kZSA9PT0gMTMpIHsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoInRhc2tBZGRlZCIsIHsKICAgICAgICAgIGluZGV4OiB0aGlzLiRzdG9yZS5zdGF0ZS5pbmRleCwKICAgICAgICAgIHZhbHVlOiBldmVudC50YXJnZXQudmFsdWUKICAgICAgICB9KTsKICAgICAgICB0aGlzLnRvRG9Xb3JrID0gIiI7CiAgICAgIH0KICAgIH0sCiAgICBjbG9zZShpbmRleCkgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoInRhc2tEZWxldGUiLCBpbmRleCk7CiAgICB9LAogICAgY2xvc2UyKGluZGV4KSB7CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgic3ViVGFza0RlbGV0ZSIsIGluZGV4KTsKICAgIH0sCiAgICBlZGl0KGluZGV4KSB7CiAgICAgIGxldCBpbmQgPSB0aGlzLiRzdG9yZS5zdGF0ZS5pbmRleDsKICAgICAgdGhpcy50b0RvV29yayA9IHRoaXMuJHN0b3JlLnN0YXRlLnRvZG9zW2luZF0ubGlzdFtpbmRleF07CiAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgidGFza0VkaXQiLCBpbmRleCk7CiAgICB9LAogICAgZG9uZShpbmRleCkgewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoInRhc2tEb25lIiwgaW5kZXgpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["rightPannel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"rightPannel.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"col-12 list-title\" v-show=\"$store.state.toList\">\n      <div class=\"row\">\n        <div class=\"col-4\"></div>\n        <div class=\"col-8\">\n          <font-awesome-icon class=\"font-icon\" :icon=\"$store.state.icon\" />\n          {{ $store.state.toList }}\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"col-2\"\n      v-if=\"$store.state.todos[$store.state.index].list.length > 0\"\n    ></div>\n    <div\n      class=\"col-6 mt-2 mb-1\"\n      v-if=\"$store.state.todos[$store.state.index].list.length > 0\"\n    >\n      <div\n        class=\"tast-list-form\"\n        v-for=\"(task, index) in $store.state.todos[$store.state.index].list\"\n        :key=\"task\"\n      >\n        {{ task }}\n        <div class=\"floating\">\n          <font-awesome-icon\n            class=\"font-le\"\n            icon=\"check\"\n            @click=\"done(index)\"\n          />\n          <font-awesome-icon\n            class=\"font-let\"\n            icon=\"edit\"\n            @click=\"edit(index)\"\n          />\n          <font-awesome-icon\n            class=\"font-lets\"\n            icon=\"times\"\n            @click=\"close(index)\"\n          />\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"col-3\"\n      v-if=\"$store.state.todos[$store.state.index].list.length > 0\"\n    ></div>\n    <div class=\"col-2\"></div>\n    <div v-show=\"$store.state.toList\" class=\"col-6 pt-5\">\n      <b-form-input\n        v-model=\"toDoWork\"\n        name=\"toDoWork\"\n        type=\"text\"\n        placeholder=\"Enter Task To Do✍...🤔\"\n        @keydown=\"addTask\"\n      >\n      </b-form-input>\n      <div v-if=\"$store.state.todos[$store.state.index].done.length > 0\">\n        <h3 class=\"mt-2\">Task Done.........😊</h3>\n        <div\n          class=\"tast-list-form\"\n          v-for=\"(task, index) in $store.state.todos[$store.state.index].done\"\n          :key=\"task\"\n        >\n          {{ task }}\n          <font-awesome-icon\n            class=\"done-let\"\n            icon=\"times\"\n            @click=\"close2(index)\"\n          />\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      toDoWork: \"\"\n    };\n  },\n  methods: {\n    addTask(event) {\n      if (event.keyCode === 13) {\n        this.$store.commit(\"taskAdded\", {\n          index: this.$store.state.index,\n          value: event.target.value\n        });\n        this.toDoWork = \"\";\n      }\n    },\n    close(index) {\n      this.$store.commit(\"taskDelete\", index);\n    },\n    close2(index) {\n      this.$store.commit(\"subTaskDelete\", index);\n    },\n    edit(index) {\n      let ind = this.$store.state.index;\n      this.toDoWork = this.$store.state.todos[ind].list[index];\n      this.$store.commit(\"taskEdit\", index);\n    },\n    done(index) {\n      this.$store.commit(\"taskDone\", index);\n    }\n  }\n};\n</script>\n<style scoped>\n.list-title {\n  font-weight: bolder;\n  font-size: 30px;\n  text-shadow: 2px 2px #b9b2b2;\n  background: rgb(245, 134, 7);\n  padding: 4px;\n  opacity: 0.9;\n}\n.textarea.form-control {\n  height: auto;\n  border: 4px solid rgb(196, 193, 193);\n}\n.font-icon {\n  margin-right: 8px;\n  color: rgb(175, 41, 7);\n}\n.tast-list-form {\n  background: rgb(135, 211, 235);\n  border: 2px solid gray;\n  margin-top: 2px;\n  padding: 4px;\n  font-weight: bold;\n  box-shadow: 2px 2px rgb(243, 241, 241);\n}\n.font-let {\n  font-weight: bold;\n  color: rgb(253, 253, 6);\n  font-size: 25px;\n  cursor: pointer;\n  padding: 2px;\n  margin-right: 10px;\n}\n.font-lets {\n  font-weight: bold;\n  color: red;\n  font-size: 25px;\n  cursor: pointer;\n  padding: 2px;\n}\n.font-le {\n  font-weight: bold;\n  color: green;\n  font-size: 25px;\n  cursor: pointer;\n  padding: 2px;\n  margin-right: 10px;\n}\n.done-let {\n  font-weight: bold;\n  color: red;\n  font-size: 25px;\n  cursor: pointer;\n  padding: 2px;\n  float: right;\n}\n.floating {\n  float: right;\n}\n</style>\n"]}]}