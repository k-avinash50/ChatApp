{"remainingRequest":"/home/administrator/Downloads/pl/pla/node_modules/babel-loader/lib/index.js!/home/administrator/Downloads/pl/pla/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/administrator/Downloads/pl/pla/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/administrator/Downloads/pl/pla/src/components/chat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/administrator/Downloads/pl/pla/src/components/chat.vue","mtime":1615223020272},{"path":"/home/administrator/Downloads/pl/pla/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/administrator/Downloads/pl/pla/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/administrator/Downloads/pl/pla/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/administrator/Downloads/pl/pla/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvaG9tZS9hZG1pbmlzdHJhdG9yL0Rvd25sb2Fkcy9wbC9wbGEvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiYXBwIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgLyogZXNsaW50LWRpc2FibGUgKi8KICAgICAgcGFydGljaXBhbnRzOiBbewogICAgICAgIGlkOiAidXNlcjEiLAogICAgICAgIG5hbWU6ICJNYXR0ZW8iLAogICAgICAgIGltYWdlVXJsOiAiaHR0cHM6Ly9hdmF0YXJzMy5naXRodWJ1c2VyY29udGVudC5jb20vdS8xOTE1OTg5P3M9MjMwJnY9NCIKICAgICAgfSwgewogICAgICAgIGlkOiAidXNlcjIiLAogICAgICAgIG5hbWU6ICJTdXBwb3J0IiwKICAgICAgICBpbWFnZVVybDogImh0dHBzOi8vYXZhdGFyczMuZ2l0aHVidXNlcmNvbnRlbnQuY29tL3UvMzcwMTg4MzI/cz0yMDAmdj00IgogICAgICB9XSwKICAgICAgLy8gdGhlIGxpc3Qgb2YgYWxsIHRoZSBwYXJ0aWNpcGFudCBvZiB0aGUgY29udmVyc2F0aW9uLiBgbmFtZWAgaXMgdGhlIHVzZXIgbmFtZSwgYGlkYCBpcyB1c2VkIHRvIGVzdGFibGlzaCB0aGUgYXV0aG9yIG9mIGEgbWVzc2FnZSwgYGltYWdlVXJsYCBpcyBzdXBwb3NlZCB0byBiZSB0aGUgdXNlciBhdmF0YXIuCiAgICAgIHRpdGxlSW1hZ2VVcmw6ICJodHRwczovL2Euc2xhY2stZWRnZS5jb20vNjZmOS9pbWcvYXZhdGFycy10ZWFtcy9hdmFfMDAwMS0zNC5wbmciLAogICAgICBtZXNzYWdlTGlzdDogW3sKICAgICAgICB0eXBlOiAidGV4dCIsCiAgICAgICAgYXV0aG9yOiAibWUiLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIHRleHQ6ICJTYXkgeWVzISIKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICB0eXBlOiAidGV4dCIsCiAgICAgICAgYXV0aG9yOiAidXNlcjEiLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIHRleHQ6ICJOby4iCiAgICAgICAgfQogICAgICB9XSwKICAgICAgLy8gdGhlIGxpc3Qgb2YgdGhlIG1lc3NhZ2VzIHRvIHNob3csIGNhbiBiZSBwYWdpbmF0ZWQgYW5kIGFkanVzdGVkIGR5bmFtaWNhbGx5CiAgICAgIG5ld01lc3NhZ2VzQ291bnQ6IDAsCiAgICAgIGlzQ2hhdE9wZW46IGZhbHNlLAogICAgICAvLyB0byBkZXRlcm1pbmUgd2hldGhlciB0aGUgY2hhdCB3aW5kb3cgc2hvdWxkIGJlIG9wZW4gb3IgY2xvc2VkCiAgICAgIHNob3dUeXBpbmdJbmRpY2F0b3I6ICIiLAogICAgICAvLyB3aGVuIHNldCB0byBhIHZhbHVlIG1hdGNoaW5nIHRoZSBwYXJ0aWNpcGFudC5pZCBpdCBzaG93cyB0aGUgdHlwaW5nIGluZGljYXRvciBmb3IgdGhlIHNwZWNpZmljIHVzZXIKICAgICAgY29sb3JzOiB7CiAgICAgICAgaGVhZGVyOiB7CiAgICAgICAgICBiZzogIiM0ZThjZmYiLAogICAgICAgICAgdGV4dDogIiNmZmZmZmYiCiAgICAgICAgfSwKICAgICAgICBsYXVuY2hlcjogewogICAgICAgICAgYmc6ICIjNGU4Y2ZmIgogICAgICAgIH0sCiAgICAgICAgbWVzc2FnZUxpc3Q6IHsKICAgICAgICAgIGJnOiAiI2ZmZmZmZiIKICAgICAgICB9LAogICAgICAgIHNlbnRNZXNzYWdlOiB7CiAgICAgICAgICBiZzogIiM0ZThjZmYiLAogICAgICAgICAgdGV4dDogIiNmZmZmZmYiCiAgICAgICAgfSwKICAgICAgICByZWNlaXZlZE1lc3NhZ2U6IHsKICAgICAgICAgIGJnOiAiI2VhZWFlYSIsCiAgICAgICAgICB0ZXh0OiAiIzIyMjIyMiIKICAgICAgICB9LAogICAgICAgIHVzZXJJbnB1dDogewogICAgICAgICAgYmc6ICIjZjRmN2Y5IiwKICAgICAgICAgIHRleHQ6ICIjNTY1ODY3IgogICAgICAgIH0KICAgICAgfSwKICAgICAgLy8gc3BlY2lmaWVzIHRoZSBjb2xvciBzY2hlbWUgZm9yIHRoZSBjb21wb25lbnQKICAgICAgYWx3YXlzU2Nyb2xsVG9Cb3R0b206IGZhbHNlLAogICAgICAvLyB3aGVuIHNldCB0byB0cnVlIGFsd2F5cyBzY3JvbGxzIHRoZSBjaGF0IHRvIHRoZSBib3R0b20gd2hlbiBuZXcgZXZlbnRzIGFyZSBpbiAobmV3IG1lc3NhZ2UsIHVzZXIgc3RhcnRzIHR5cGluZy4uLikKICAgICAgbWVzc2FnZVN0eWxpbmc6IHRydWUgLy8gZW5hYmxlcyAqYm9sZCogL2VtcGgvIF91bmRlcmxpbmVfIGFuZCBzdWNoIChtb3JlIGluZm8gYXQgZ2l0aHViLmNvbS9tYXR0ZXp6YS9tc2dkb3duKQoKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBzZW5kTWVzc2FnZTogZnVuY3Rpb24gc2VuZE1lc3NhZ2UodGV4dCkgewogICAgICBpZiAodGV4dC5sZW5ndGggPiAwKSB7CiAgICAgICAgdGhpcy5uZXdNZXNzYWdlc0NvdW50ID0gdGhpcy5pc0NoYXRPcGVuID8gdGhpcy5uZXdNZXNzYWdlc0NvdW50IDogdGhpcy5uZXdNZXNzYWdlc0NvdW50ICsgMTsKICAgICAgICB0aGlzLm9uTWVzc2FnZVdhc1NlbnQoewogICAgICAgICAgYXV0aG9yOiAic3VwcG9ydCIsCiAgICAgICAgICB0eXBlOiAidGV4dCIsCiAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgIHRleHQ6IHRleHQKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIG9uTWVzc2FnZVdhc1NlbnQ6IGZ1bmN0aW9uIG9uTWVzc2FnZVdhc1NlbnQobWVzc2FnZSkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBzZW5kcyBhIG1lc3NhZ2UKICAgICAgdGhpcy5tZXNzYWdlTGlzdCA9IFtdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkodGhpcy5tZXNzYWdlTGlzdCksIFttZXNzYWdlXSk7CiAgICB9LAogICAgb3BlbkNoYXQ6IGZ1bmN0aW9uIG9wZW5DaGF0KCkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBjbGlja3Mgb24gdGhlIGZhYiBidXR0b24gdG8gb3BlbiB0aGUgY2hhdAogICAgICB0aGlzLmlzQ2hhdE9wZW4gPSB0cnVlOwogICAgICB0aGlzLm5ld01lc3NhZ2VzQ291bnQgPSAwOwogICAgfSwKICAgIGNsb3NlQ2hhdDogZnVuY3Rpb24gY2xvc2VDaGF0KCkgewogICAgICAvLyBjYWxsZWQgd2hlbiB0aGUgdXNlciBjbGlja3Mgb24gdGhlIGJvdHRvbiB0byBjbG9zZSB0aGUgY2hhdAogICAgICB0aGlzLmlzQ2hhdE9wZW4gPSBmYWxzZTsKICAgIH0sCiAgICBoYW5kbGVTY3JvbGxUb1RvcDogZnVuY3Rpb24gaGFuZGxlU2Nyb2xsVG9Ub3AoKSB7Ly8gY2FsbGVkIHdoZW4gdGhlIHVzZXIgc2Nyb2xscyBtZXNzYWdlIGxpc3QgdG8gdG9wCiAgICAgIC8vIGxldmVyYWdlIHBhZ2luYXRpb24gZm9yIGxvYWRpbmcgYW5vdGhlciBwYWdlIG9mIG1lc3NhZ2VzCiAgICB9LAogICAgaGFuZGxlT25UeXBlOiBmdW5jdGlvbiBoYW5kbGVPblR5cGUoKSB7CiAgICAgIGNvbnNvbGUubG9nKCJFbWl0IHR5cGluZyBldmVudCIpOwogICAgfSwKICAgIGVkaXRNZXNzYWdlOiBmdW5jdGlvbiBlZGl0TWVzc2FnZShtZXNzYWdlKSB7CiAgICAgIHZhciBtID0gdGhpcy5tZXNzYWdlTGlzdC5maW5kKGZ1bmN0aW9uIChtKSB7CiAgICAgICAgcmV0dXJuIG0uaWQgPT09IG1lc3NhZ2UuaWQ7CiAgICAgIH0pOwogICAgICBtLmlzRWRpdGVkID0gdHJ1ZTsKICAgICAgbS5kYXRhLnRleHQgPSBtZXNzYWdlLmRhdGEudGV4dDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["chat.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <beautiful-chat\n      :participants=\"participants\"\n      :titleImageUrl=\"titleImageUrl\"\n      :onMessageWasSent=\"onMessageWasSent\"\n      :messageList=\"messageList\"\n      :newMessagesCount=\"newMessagesCount\"\n      :isOpen=\"isChatOpen\"\n      :close=\"closeChat\"\n      :open=\"openChat\"\n      :showEmoji=\"true\"\n      :showFile=\"true\"\n      :showEdition=\"true\"\n      :showDeletion=\"true\"\n      :showTypingIndicator=\"showTypingIndicator\"\n      :showLauncher=\"true\"\n      :showCloseButton=\"true\"\n      :colors=\"colors\"\n      :alwaysScrollToBottom=\"alwaysScrollToBottom\"\n      :disableUserListToggle=\"false\"\n      :messageStyling=\"messageStyling\"\n      @onType=\"handleOnType\"\n      @edit=\"editMessage\"\n    />\n  </div>\n</template>\n<script>\nexport default {\n  name: \"app\",\n  data() {\n    return {\n      /* eslint-disable */\n      participants: [\n        {\n          id: \"user1\",\n          name: \"Matteo\",\n          imageUrl: \"https://avatars3.githubusercontent.com/u/1915989?s=230&v=4\"\n        },\n        {\n          id: \"user2\",\n          name: \"Support\",\n          imageUrl: \"https://avatars3.githubusercontent.com/u/37018832?s=200&v=4\"\n        }\n      ], // the list of all the participant of the conversation. `name` is the user name, `id` is used to establish the author of a message, `imageUrl` is supposed to be the user avatar.\n      titleImageUrl: \"https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png\",\n      messageList: [\n          { type: \"text\", author: `me`, data: { text: `Say yes!` } },\n          { type: \"text\", author: `user1`, data: { text: `No.` } }\n      ], // the list of the messages to show, can be paginated and adjusted dynamically\n      newMessagesCount: 0,\n      isChatOpen: false, // to determine whether the chat window should be open or closed\n      showTypingIndicator: \"\", // when set to a value matching the participant.id it shows the typing indicator for the specific user\n      colors: {\n        header: {\n          bg: \"#4e8cff\",\n          text: \"#ffffff\"\n        },\n        launcher: {\n          bg: \"#4e8cff\"\n        },\n        messageList: {\n          bg: \"#ffffff\"\n        },\n        sentMessage: {\n          bg: \"#4e8cff\",\n          text: \"#ffffff\"\n        },\n        receivedMessage: {\n          bg: \"#eaeaea\",\n          text: \"#222222\"\n        },\n        userInput: {\n          bg: \"#f4f7f9\",\n          text: \"#565867\"\n        }\n      }, // specifies the color scheme for the component\n      alwaysScrollToBottom: false, // when set to true always scrolls the chat to the bottom when new events are in (new message, user starts typing...)\n      messageStyling: true // enables *bold* /emph/ _underline_ and such (more info at github.com/mattezza/msgdown)\n    }\n  },\n  methods: {\n    sendMessage (text) {\n      if (text.length > 0) {\n        this.newMessagesCount = this.isChatOpen ? this.newMessagesCount : this.newMessagesCount + 1\n        this.onMessageWasSent({ author: \"support\", type: \"text\", data: { text } })\n      }\n    },\n    onMessageWasSent (message) {\n      // called when the user sends a message\n      this.messageList = [ ...this.messageList, message ]\n    },\n    openChat () {\n      // called when the user clicks on the fab button to open the chat\n      this.isChatOpen = true\n      this.newMessagesCount = 0\n    },\n    closeChat () {\n      // called when the user clicks on the botton to close the chat\n      this.isChatOpen = false\n    },\n    handleScrollToTop () {\n      // called when the user scrolls message list to top\n      // leverage pagination for loading another page of messages\n    },\n    handleOnType () {\n      console.log(\"Emit typing event\")\n    },\n    editMessage(message){\n      const m = this.messageList.find(m=>m.id === message.id);\n      m.isEdited = true;\n      m.data.text = message.data.text;\n    }\n  }\n}\n</script>"],"sourceRoot":"src/components"}]}